
Sampling Model Parameters and Estimates

Let's simulate a poll with an urn instead of voters. And because pollsters are competing with other pollsters 
for media attention, we will imitate that by having our competition with a $25 prize.

The challenge is to guess the spread between the proportion of blue and red balls in this urn.

To mimic the fact that running polls is expensive, it will cost you $0.10 per bead you sample.
So if your sample size is 250 and you win, you'll break even, as you'll have to pay me $25 to collect your $25.

Your entry into the competition can be an interval.
If the interval you submit contains the true proportion,
you get half what you paid and pass to the second phase of the competition.
In the second phase of the competition, the entry with the smallest interval
is selected as the winner.

Here's the code that you can write to see a sample.
And here is a sample with 25 beads.

> library(tidyverse)
> library(dslabs)
> ds_theme_set()
> take_poll(25)

13 red, 12 blue

p - proportion of blue beads
1-p - proportion of red beads

spread = p - (1-p) = 2p - 1

In statistical textbooks, the beads in the urn are called the population.
The proportion of blue beads in the population, p, is called a parameter.

The 25 beads that we saw in an earlier plot after we sampled, that's called a sample.

predict the parameter p using the observed data in the sample

estimate: summary of the observed data that we think is informative about the parameter of interest

in this case, the proportion of blue beads in the sample is 0.48

so can we predict p to be 0.48?
Note the sample proportion is a random variable
> take_poll(25)
> take_poll(25)
> take_poll(25)
> take_poll(25)

we get 4 different answers because the sample proportion is a random variable.
it ranges from 0.44 to 0.6

so we need to describe the distribution of this random variable.

------------------------------------------------------------------------------------------------------

The Sample Average

We will illustrate the concept of statistical inference for estimating p.
We will use our knowledge of probability to defend our use of the sample
proportion, and quantify how close we think it is from the population proportion p.


X = 1 if it's blue
X = 0 if it's red

If we sample N beads, then the average of the draws X1 through XN
is equivalent to the proportion of blue beads in our sample.
This is because adding the Xs is equivalent to counting the blue beads,
and dividing by the total N turns this into a proportion.

Xbar = (X1 + X2 + ... + XN) / N

We use the symbol X-bar to represent this average.

In general, in statistics textbooks, a bar on top of a symbol
means the average.

The theory we just learned about the sum of draws
becomes useful, because we know the distribution of the sum N times X-bar.
We know the distribution of the average X-bar,
because N is a non random constant.

N*Xbar  = (N(X1 + X2 + ... + XN)) / N
	= (X1 + X2 + ... + XN)
	
Assuming the draws are independent and sample with replacement.

We know that the expected value of the sum of draws is N time the avg of the values in the urn.
We know that the avg of the 0s and 1s in the urn must be the proportion p, the value we want to estimate.
But we don't know what's in the urn.

Let's estimate p.

Parameters is to defined unkonwn parts of our models.
Here, we don't know the proportion of blue beads in the urn.  We defined the parameter p to represent this parameter.


We may ask:
What is the difference in health improvement between patients receiving treatment and a control group?
What are the health effects of smoking on a population?
What are the differences in racial groups of fatal shootings by police?
What is the rate of change in life expectancy in the US during the last 10 years?
All these questions can be framed as a task of estimating a parameter from a sample.

-----------------------------------------------------------------------------------------------------

Polling versus Forecasting

If a poll is conducted four months before the election it is estimating the p for THAT MOMENT,
not for election day.
Note that the p for election night might be different since people's opinions fluctuate through time.
So polls provided the night before is the most accurate.

Forecasters try to build tools that model how opininos vary across time and try to predict the election day
result, taking into consideration the fact that opinions fluctuate.

-----------------------------------------------------------------------------------------------------

Properties of Our Estimate

The sample proportion:
Xbar = (X1 + X2 + ... + XN) / N


N*Xbar  = (N(X1 + X2 + ... + XN)) / N
	= (X1 + X2 + ... + XN)
	
N*Xbar is the sum of independent draws


So using what we have learned, the expected value of the sum N times X-bar is N times the average of the urn, p.
E(NXbar) = N * p

So, dividing by the nonrandom constant N gives us that the expected value of the average X-bar is p.
E(Xbar) = p

We know that the standard error is:
SE(X) 	= | b - a | sqrt(p(1-p))
	= ( 1 - 0 ) sqrt(p(1-p))
	= sqrt(p(1-p))
	
	
Because we are dividing by the sum, N, we arrive at the following formula for the standard error of the average.
The standard error of the average is square root of p times 1 minus p divided by the square root of N.
SE(Xbar) = sqrt(p(1-p)/N)

And we can make the standard error as small as we want by increasing the sample size, N. The law of large numbers
tells us that, with a large enough poll, our estimate converges to p.

If we take a large enough poll to make our standard error, say, about 0.01, we'll be quite certain about who will win.

So how large should the poll be? what should N be?

One problem is that we do not know p, so we can't actually compute the standard error.
For illustrative purposes, let's assume that p is 0.51 and make a plot of the standard error versus the sample 
size N. Here it is. You can see that obviously it's dropping.
From the plot, we also see that we would need a poll of over 10,000 people
to get the standard error as low as we want it to be.


From RealClearPolitcs table, the sample saizes in opinion polls are from 500 to 3,500 people.

For a sample size of 1,000, if we set p to be 0.51, the standard error is about 0.15, or 1.5 percentage points.
sample size = 1,000
p = 51%
SE ~ 1.5%

So even with large polls, for close elections, X-bar can lead us astray if we don't realize it's a random variable.


----------------------------------------------------------------------------------------------------------

Assessment

1.
Suppose you poll a population in which a proportion p of voters are Democrats and 1-p are Republicans. 
Your sample size is N=25. Consider the random variable S, which is the total number of Democrats in your sample.
What is the expected value of this random variable S?
E(S)=25p


2.
Again, consider the random variable S, which is the total number of Democrats in your sample of 25 voters.
The variable p describes the proportion of Democrats in the sample, whereas 1-p describes the proportion of 
Republicans. What is the standard error of S?
SE(S)=sqrt(25p(1-p))


3.
Consider the random variable S/N, which is equivalent to the sample average that we have been denoting as X¯. 
The variable N represents the sample size and p is the proportion of Democrats in the population.
What is the expected value of X¯?
E(X¯)=p


4.
What is the standard error of the sample average, X¯?
The variable N represents the sample size and p is the proportion of Democrats in the population.
sqrt(p(1-p)/N)

5.
Write a line of code that calculates the standard error se of a sample average when you poll 25 
people in the population. Generate a sequence of 100 proportions of Democrats p that vary from 0 
(no Democrats) to 1 (all Democrats).
Plot se versus p for the 100 different proportions.
Use the seq function to generate a vector of 100 values of p that range from 0 to 1.
Use the sqrt function to generate a vector of standard errors for all values of p.
Use the plot function to generate a plot with p on the x-axis and se on the y-axis.
# `N` represents the number of people polled
N <- 25

# Create a variable `p` that contains 100 proportions ranging from 0 to 1 using the `seq` function
p <- seq(0, 1, length=100)

# Create a variable `se` that contains the standard error of each sample average
se <- sqrt(p*(1-p)/N)

# Plot `p` on the x-axis and `se` on the y-axis
plot(p, se)


6.
Using the same code as in the previous exercise, create a for-loop that generates three plots of p 
versus se when the sample sizes equal N=25, N=100, and N=1000.
Your for-loop should contain two lines of code to be repeated for three different values of N.
The first line within the for-loop should use the sqrt function to generate a vector of standard errors se for all values of p.
The second line within the for-loop should use the plot function to generate a plot with p on the x-axis and se on the y-axis.
Use the ylim argument to keep the y-axis limits constant across all three plots. The lower limit should be equal to 0 and the 
upper limit should equal the highest calculated standard error across all values of p and N.
# The vector `p` contains 100 proportions of Democrats ranging from 0 to 1 using the `seq` function
p <- seq(0, 1, length = 100)

# The vector `sample_sizes` contains the three sample sizes
sample_sizes <- c(25, 100, 1000)

# Write a for-loop that calculates the standard error `se` for every value of `p` for each of the three samples sizes `N` in the vector `sample_sizes`. Plot the three graphs, using the `ylim` argument to standardize the y-axis across all three plots.
m <- max(sample_sizes)
for (i in sample_sizes){ 
  se<- sqrt(p*(1-p)/i)
  plot (p, se, ylim=c(0, m)) 
}


7.
Our estimate for the difference in proportions of Democrats and Republicans is d=X¯-(1-X¯).
Which derivation correctly uses the rules we learned about sums of random variables and scaled random variables to SE[XÂ¯â(1âXÂ¯)]=SE[2XÂ¯â1] =2SE[XÂ¯â1] =2p(1âp)/Nâââââââââââ1derive the expected value of d?
E[X¯-(1-X¯)]=E[2X¯-1] =2E[X¯]-1 =2p-1 =p-(1-p)
 


8.
Our estimate for the difference in proportions of Democrats and Republicans is d=X¯-(1-X¯).
Which derivation correctly uses the rules we learned about sums of random variables and scaled random variables to derive the standard error of d?
SE[X¯-(1-X¯)]=SE[2X¯-1] =2SE[X¯] =2*sqrt(p(1-p)/N)

*subtracting 1 does not affect the standard error


9.
Say the actual proportion of Democratic voters is p=0.45. In this case, the Republican party is winning by a relatively large margin of d=-0.1, or a 10% margin of victory. What is the standard error of the spread 2X¯-1 in this case?
Use the sqrt function to calculate the standard error of the spread 2X¯-1.
# `N` represents the number of people polled
N <- 25

# `p` represents the proportion of Democratic voters
p <- 0.45

# Calculate the standard error of the spread. Print this value to the console.
2*sqrt(p*(1-p)/N)



10.
So far we have said that the difference between the proportion of Democratic voters and Republican voters is about 10% and that the standard error of this spread is about 0.2 when N=25. Select the statement that explains why this sample size is sufficient or not.
This sample size is too small because the standard error is larger than the spread.

