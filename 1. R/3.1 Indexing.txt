Indexing

Using Logical Operators to index vectors
>index <- murder_rate < 0.71
>index <- murder_rate <= 0.71


to see which states these are:
>murders$state[index]

count how many entries are true (how many rates have murder rate less than 0.71:
>sum(index)
[1] 5

we want murder rate to be at most 1
>True & True 
>True & False


>west <- murders$region == "West"
>safe <- murder_rate <= 1

This will be true when both entries of those vectors are true
>index <- safe & west
>murder$state[index]

Indexing Function
which - gives you entries of a logical vectors that are true
>x <- c(FALSE, TRUE,FALSE, TRUE, TRUE, FALSE)
>which(x)
[1] 2 4 5

look up MA's murder rate
>index <- which(murders$state =="Massachusetts")
>index
[1] 22
>murder_rate[index]
[1] 1.802


match - looks for entries in a vector and returns the index needed to access them
>index <- match(c("New York","Florida","Texas"), murders$state)
>index
[1] 33 10 44
>murders_state[index]
[1] "New York", "Florida","Texas"
>murder_rate[index]
[1] 2.668 3.398 3.201

%in% - if rather than an index, we want to know whether or not each element of a 
first vector is in a second vector, we use the function %in5.
>x <- c("a","b","c","d","e")
>y <- c("a","d","f")
> y %in% x
[1] TRUE, TRUE, FALSE

Test:
Check if Boston, Dakota, Washington are states
>c("Boston","Dakota","Washington") %in% murders$state
[1] FALSE, FALSE, TRUE

# Store the murder rate per 100,000 for each state, in murder_rate
murder_rate <- murders$total/murders$population*100000

# Store the murder_rate < 1 in low 
low <- murder_rate < 1

# Names of states with murder rates lower than 1
murders$state[which(low)]

# Store the murder rate per 100,000 for each state, in `murder_rate`
murder_rate <- murders$total/murders$population*100000

# Store the `murder_rate < 1` in `low` 
low <- murder_rate < 1

# Create a vector ind for states in the Northeast and with murder rates lower than 1. 
ind <- low & murders$region=="Northeast"

# Names of states in `ind` 
murders$state[ind]

# Store the murder rate per 100,000 for each state, in murder_rate
murder_rate <- murders$total/murders$population*100000


# Compute average murder rate and store in avg using `mean` 
avg <- mean(murder_rate)

# How many states have murder rates below avg ? Check using sum 
sum(murder_rate < avg)

# Store the 3 abbreviations in abbs in a vector (remember that they are character vectors and need quotes)
abbs <- c("AK","MI","IA")

# Match the abbs to the murders$abb and store in ind
ind <- match(abbs, murders$abb)

# Print state names from ind
murders$state[ind]


# Store the 5 abbreviations in `abbs`. (remember that they are character vectors)
abbs <- c("MA","ME","MI","MO","MU")


# Use the %in% command to check if the entries of abbs are abbreviations in the the murders data frame
abbs%in%murders$abb


# Store the 5 abbreviations in abbs. (remember that they are character vectors)
abbs <- c("MA", "ME", "MI", "MO", "MU") 

# Use the `which` command and `!` operator to find out which abbreviation are not actually part of the dataset and store in ind
ind <- which(!abbs%in%murders$abb)

# What are the entries of abbs that are not actual abbreviations
abbs[ind]