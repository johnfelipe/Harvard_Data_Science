
Basic data Wrangling

dplyr package - to manipulate data tables

functions:
mutate - to change the data table by adding a new column or changing an existing one
filter - to filter the data by subsetting rows
select - tp subset the data by selecting specific columns

%>% pipe operator - select this and then flter that by sending the results of one function to another function

to add murder rate
>murders <= mutate(murders, rate=total/population*100000)

to show first 6 rows with headers
>head(murders)

to filter rate <= 0.71
>filter(murders,rate <= 0.71)

definte a new table
>new_table <- select(murders,state, region,rate)
>filter(new_table, rate <= 0.71)

in one statement using dplyr pipe operator
>murders %>% select(state,region,rate) %>% filter(rate<=0.71)

to create data frame
>grades <- data.frame(names=c("John","Juan","Jean","Yao"),
		exam_1 = c(95,80,90,85),
		exam_2 = c(90,85,85,90))
>grades

By default, data frame turns characters into factors:
>class(grades$names)
[1] "factor"

To avoid this we use the argument stringsAsFactors:
>grades <- data.frame(names=c("John","Juan","Jean","Yao"),
		exam_1 = c(95,80,90,85),
		exam_2 = c(90,85,85,90)),
		stringsAsFactors = FALSE)
>


add rank column and rank rate from highest to lowers
>murders <- mutate(murders, rank(rank(-rate))

# Add the necessary columns
murders <- mutate(murders, rate = total/population * 100000, rank = rank(-rate))

# Filter to show the top 5 states with the highest murder rates
filter(murders, rank <=5)

# Use filter to create a new data frame no_south
no_south <- filter(murders, region != "South")

# Use nrow() to calculate the number of rows
nrow(no_south)

# Create a new data frame called murders_nw with only the states from the northeast and the west
murders_nw <- filter(murders, region %in% c("Northeast", "West"))

# Number of states (rows) in this category 
nrow(murders_nw)


# add the rate column
murders <- mutate(murders, rate =  total / population * 100000, rank = rank(-rate))

# Create a table, call it my_states, that satisfies both the conditions 
my_states <- filter(murders, region %in% c("Northeast","West") & rate <1)

# Use select to show only the state name, the murder rate and the rank
select(my_states, state, rate, rank)


# Load library
library(dplyr)

## Define the rate column
murders <- mutate(murders, rate =  total / population * 100000, rank = rank(-rate))

# show the result and only include the state, rate, and rank columns, all in one line
filter(murders, region %in% c("Northeast","West") & rate < 1) %>% select(state, rate, rank)

# Loading the libraries
library(dplyr)
data(murders)

# Create new data frame called my_states (with specifications in the instructions)
my_states <- murders %>% mutate(rate =  total / population * 100000, rank = rank(-rate)) %>% filter(region %in% c("Northeast", "West") & rate < 1) %>% select(state, rate, rank)